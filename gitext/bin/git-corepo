#!/bin/bash
. $(dirname $0)/../lib/corepo

function show_usage() {
  echo "Usages:"
  echo " git corepo --list|-l"
  echo " git corepo --show-config"
  echo " git corepo NAME --path"
  echo " git corepo NAME --last-commit|--last"
  echo " git corepo NAME --status [-v]"
  echo " git corepo NAME GITCOMMAND"
  echo " git corepo :all [--ignore-errors] GITCOMMAND"
}

cmd=$1
shift
case _$cmd in
_--list|_-l)
  init_corepos
  echo "$corepos_list"
  ;;
_--show-config)
  echo "corepos.ignoreerrors=$($GIT_EXEC_PATH/git config --type=bool --get corepos.ignoreerrors)"
  echo "corepos.ignoreuncomitted=$($GIT_EXEC_PATH/git config --type=bool --get corepos.ignoreuncomitted)"
  ;;
_:all)
  init_corepos
  delim="Co-repo"
  if [ "$1" == "--ignore-errors" ]; then
    ignore_errors=1
    shift
  else
    ignore_errors=
  fi
  for corepo_name in $corepos_list; do
    echo -e "$delim $corepo_name"
    $0 $corepo_name "$@"
    exit_code=$?
    [ $exit_code != 0 ] && [ -z "ignore_errors" ] && exit $exit_code
    delim="\nCo-repo"
  done
  ;;
_[a-z]*)
  corepo_name="$cmd"
  cmd=$1
  shift
  init_corepos
  echo "$corepos_list" | grep "^$corepo_name\$" > /dev/null
  [ $? != 0 ] && echo "Unknown co-repo $corepo_name" && exit 1
  case _$cmd in
  _--last-commit|_--last)
    for corepo_entry in $($GIT_EXEC_PATH/git log --format="%(trailers:key=Co-repos,valueonly)" -1); do
      corepo_entry=${corepo_entry/,/}
      if [[ "${corepo_entry}" == $corepo_name@* ]]; then
        corepo_hash=${corepo_entry#$corepo_name@}
        echo $corepo_hash
        exit 0
      fi
    done
    echo "Co-repo status for $corepo_name not found in commit message"
    exit 1
    ;;
  _--path)
    init_repo_path $corepo_name
    echo $repo_path
    ;;
  _--status)
    init_repo_path $corepo_name
    init_repo_status $repo_path
    [ ! -z "$repo_error" ] && echo "$repo_path: $repo_error" && exit 1
    echo "$repo_path: $repo_commit"
    [ ! -z "$repo_uncommitted" ] && [ "$1" == "-v" ] && echo -e "$repo_uncommitted"
    :
    ;;
  _[a-z]*)
    init_repo_path $corepo_name
    $GIT_EXEC_PATH/git -C $repo_path $cmd "$@"
    ;;
  _)
    show_usage
    ;;
  *)
    echo "Unsupported sub-command: $cmd"
    show_usage
    exit 1
    ;;
  esac
  ;;
_)
  show_usage
  ;;
*)
  echo "Unsupported command: $cmd"
  show_usage
  exit 1
  ;;
esac